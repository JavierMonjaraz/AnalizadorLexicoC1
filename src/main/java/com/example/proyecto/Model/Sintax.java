
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Thu Mar 03 20:35:51 CST 2022
//----------------------------------------------------

package com.example.proyecto.Model;

import java_cup.runtime.Symbol;

/** CUP v0.10k generated parser.
  * @version Thu Mar 03 20:35:51 CST 2022
  */
public class Sintax
 extends java_cup.runtime.lr_parser
{
  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\047\000\002\002\004\000\002\003\004\000\002\004" +
    "\006\000\002\007\005\000\002\010\005\000\002\010\002" +
    "\000\002\005\011\000\002\013\004\000\002\012\004\000" +
    "\002\012\002\000\002\011\007\000\002\014\003\000\002" +
    "\014\002\000\002\006\003\000\002\006\004\000\002\006" +
    "\002\000\002\015\007\000\002\017\005\000\002\016\004" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\016\004\000\002\016\003\000\002\016\004\000\002" +
    "\016\004\000\002\016\004\000\002\016\004\000\002\016" +
    "\004\000\002\016\003\000\002\016\003\000\002\016\003" +
    "\000\002\016\004\000\002\016\004\000\002\016\003\000" +
    "\002\016\004\000\002\016\004\000\002\016\004\000\002" +
    "\016\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\115\000\004\031\004\001\002\000\004\032\115\001" +
    "\002\000\004\002\114\001\002\000\004\031\007\001\002" +
    "\000\004\033\017\001\002\000\004\044\012\001\002\000" +
    "\004\002\000\001\002\000\006\002\ufffc\031\007\001\002" +
    "\000\004\002\ufffe\001\002\000\004\044\015\001\002\000" +
    "\006\002\ufffc\031\007\001\002\000\004\002\ufffd\001\002" +
    "\000\004\045\020\001\002\000\004\041\021\001\002\000" +
    "\004\045\022\001\002\000\054\004\045\005\055\006\051" +
    "\007\043\010\046\011\061\012\053\013\063\014\040\015" +
    "\037\016\057\017\044\020\050\021\062\022\064\023\047" +
    "\024\042\025\041\026\056\027\052\030\060\001\002\000" +
    "\004\037\030\001\002\000\006\037\ufff8\045\022\001\002" +
    "\000\004\037\ufffa\001\002\000\006\037\ufff8\045\022\001" +
    "\002\000\004\037\ufff9\001\002\000\004\040\033\001\002" +
    "\000\004\042\032\001\002\000\004\044\ufffb\001\002\000" +
    "\004\041\034\001\002\000\004\045\035\001\002\000\004" +
    "\042\036\001\002\000\004\042\ufff1\001\002\000\004\041" +
    "\066\001\002\000\004\041\066\001\002\000\004\041\066" +
    "\001\002\000\012\034\uffdf\035\uffdf\036\uffdf\043\uffdf\001" +
    "\002\000\012\034\uffec\035\uffec\036\uffec\043\uffec\001\002" +
    "\000\012\034\uffe4\035\uffe4\036\uffe4\043\uffe4\001\002\000" +
    "\004\041\066\001\002\000\004\041\066\001\002\000\004" +
    "\041\066\001\002\000\012\034\uffe3\035\uffe3\036\uffe3\043" +
    "\uffe3\001\002\000\012\034\uffed\035\uffed\036\uffed\043\uffed" +
    "\001\002\000\004\041\066\001\002\000\004\041\066\001" +
    "\002\000\012\034\ufff5\035\ufff5\036\075\043\ufff5\001\002" +
    "\000\012\034\uffee\035\uffee\036\uffee\043\uffee\001\002\000" +
    "\004\041\066\001\002\000\004\041\066\001\002\000\004" +
    "\041\066\001\002\000\012\034\uffea\035\uffea\036\uffea\043" +
    "\uffea\001\002\000\012\034\uffe2\035\uffe2\036\uffe2\043\uffe2" +
    "\001\002\000\004\041\066\001\002\000\004\041\066\001" +
    "\002\000\012\034\uffe1\035\uffe1\036\uffe1\043\uffe1\001\002" +
    "\000\004\046\067\001\002\000\004\042\070\001\002\000" +
    "\012\034\ufff0\035\ufff0\036\ufff0\043\ufff0\001\002\000\012" +
    "\034\uffe8\035\uffe8\036\uffe8\043\uffe8\001\002\000\012\034" +
    "\uffdb\035\uffdb\036\uffdb\043\uffdb\001\002\000\012\034\uffe5" +
    "\035\uffe5\036\uffe5\043\uffe5\001\002\000\012\034\uffdd\035" +
    "\uffdd\036\uffdd\043\uffdd\001\002\000\010\034\ufff6\035\ufff6" +
    "\043\ufff6\001\002\000\010\034\077\035\100\043\ufff2\001" +
    "\002\000\004\035\103\001\002\000\004\043\ufff4\001\002" +
    "\000\004\043\102\001\002\000\006\037\ufff7\045\ufff7\001" +
    "\002\000\004\043\ufff3\001\002\000\012\034\uffe9\035\uffe9" +
    "\036\uffe9\043\uffe9\001\002\000\012\034\uffdc\035\uffdc\036" +
    "\uffdc\043\uffdc\001\002\000\012\034\uffe0\035\uffe0\036\uffe0" +
    "\043\uffe0\001\002\000\012\034\uffeb\035\uffeb\036\uffeb\043" +
    "\uffeb\001\002\000\012\034\uffef\035\uffef\036\uffef\043\uffef" +
    "\001\002\000\012\034\uffde\035\uffde\036\uffde\043\uffde\001" +
    "\002\000\012\034\uffe7\035\uffe7\036\uffe7\043\uffe7\001\002" +
    "\000\012\034\uffe6\035\uffe6\036\uffe6\043\uffe6\001\002\000" +
    "\004\002\001\001\002\000\004\045\116\001\002\000\004" +
    "\044\117\001\002\000\004\031\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\115\000\006\003\004\004\005\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\005\007\007\010\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\005\013\010\012\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\005\013\010\015\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\011\023" +
    "\013\022\001\001\000\004\016\053\001\001\000\004\015" +
    "\030\001\001\000\006\011\025\012\024\001\001\000\002" +
    "\001\001\000\006\011\025\012\026\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\112\001\001\000\004\017\111" +
    "\001\001\000\004\017\110\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\017\107\001\001" +
    "\000\004\017\106\001\001\000\004\017\105\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\017\104\001\001" +
    "\000\004\017\103\001\001\000\004\014\075\001\001\000" +
    "\002\001\001\000\004\017\073\001\001\000\004\017\072" +
    "\001\001\000\004\017\071\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\070\001\001\000\004\017\064" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\100\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;

    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // TIPODATO ::= Timestamp LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // TIPODATO ::= Time LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // TIPODATO ::= Year LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // TIPODATO ::= Datetime LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // TIPODATO ::= Date 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // TIPODATO ::= Nvarchar LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // TIPODATO ::= Nchar LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // TIPODATO ::= Tinytext 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // TIPODATO ::= Mediumtext 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // TIPODATO ::= Longtext 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // TIPODATO ::= Text LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // TIPODATO ::= Varchar LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // TIPODATO ::= Char LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // TIPODATO ::= Tinyint LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // TIPODATO ::= Smallint LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // TIPODATO ::= Real 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // TIPODATO ::= Mediumint LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // TIPODATO ::= Float 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // TIPODATO ::= Double 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // TIPODATO ::= Decimal 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // TIPODATO ::= Int LONGITUD 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(12/*TIPODATO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // LONGITUD ::= pa Longitud pc 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(13/*LONGITUD*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // PK ::= primary key pa identificador pc 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(11/*PK*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // N ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(4/*N*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // N ::= Not Nulo 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(4/*N*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // N ::= Nulo 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(4/*N*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // AUTOI ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(10/*AUTOI*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // AUTOI ::= autoi 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(10/*AUTOI*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ATRIBUTO ::= identificador TIPODATO AUTOI N coma 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(7/*ATRIBUTO*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // RATRIBUTOS ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(8/*RATRIBUTOS*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // RATRIBUTOS ::= ATRIBUTO RATRIBUTOS 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(8/*RATRIBUTOS*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ATRIBUTOS ::= ATRIBUTO RATRIBUTOS 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(9/*ATRIBUTOS*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CTB ::= Create Table identificador pa ATRIBUTOS PK pc 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(3/*CTB*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // RNTB ::= 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(6/*RNTB*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // RNTB ::= CTB pcoma RNTB 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(6/*RNTB*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // NTB ::= CTB pcoma RNTB 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(5/*NTB*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // CDB ::= Create Database identificador pcoma 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(2/*CDB*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // QUERY ::= CDB NTB 
            {
              Object RESULT = null;

              CUP$Sintax$result = new java_cup.runtime.Symbol(1/*QUERY*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= QUERY EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          default:
            {
              throw new Exception(
                 "Invalid action number found in internal parse table");
            }

        }
    }
}

